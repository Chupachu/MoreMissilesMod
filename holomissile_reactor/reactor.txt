Part : /BASE_PART
{
	NameKey = "Parts/HoloReactor"
	IconNameKey = "Parts/HoloReactorIcon"
	IDString = chupachu.holoreactor // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	OtherIDs = [holoreactor]
	EditorGroup = "MoreMissiles"
	DescriptionKey = "Parts/HoloReactorDesc"
	Cost = 50000
	AIValue = 50
	Size = [2, 2]
	SelectionPriority = 0
	MaxHealth = 5000
	PenetrationResistance = 1
	AutoDoorMaxPathLength = 5
	TypeCategories = [missiles, weapon_using_missiles]
	CreatePartPerTileWhenDestroyed = ""
	IgnoreRotationForMirroredSelection = true
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	Components
	{
		BatteryStorage
		{
			Type = AmmoConsumer
			AmmoType = battery
			MaxAmmo = 20000
			StartingAmmo = 0
			Priorities = &/PRIORITIES/Factory_Supply
			SuppliesAmmo = true
			ToggleOnAmmo = 100
			ToggleOffAmmo = 99
			AssumeAlwaysHasAmmo = true
			WaitPerDistToNextClosest = .15
		}
		MissileStorage
		{
			Type = AmmoStorage
			AmmoType = holomissile_part
			MaxAmmo = 80
			StartingAmmo = 0
			SuppliesAmmo = true
			MaxIndicatorAmmo = 1000
			AssumeAlwaysHasAmmo = true
		}
		BatteryProducer
		{
			Type = AmmoConverter
			FromStorage = BatteryStorage
			ToStorage = MissileStorage
			FromQuantity = 100
			ToQuantity = 1
			Interval = .4
		}

		Graphics
		{
			Type = Graphics
			Location = [1, 1]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [2, 2]
					}
					{
						File = "floor_33.png"
						Size = [2, 2]
					}
					{
						File = "floor_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"lights1.png"
							"lights2.png"
							"lights3.png"
							"lights4.png"
							"lights5.png"
							"lights6.png"
							"lights7.png"
							"lights8.png"
						]
						Size = [2, 2]
						AnimationInterval = 0.05
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [2, 2]
					}
					{
						File = "walls_33.png"
						Size = [2, 2]
					}
					{
						File = "walls_66.png"
						Size = [2, 2]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [2, 2]
					}
					{
						File = "roof_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"roof_doodads1.png"
							"roof_doodads2.png"
							"roof_doodads3.png"
							"roof_doodads4.png"
							"roof_doodads5.png"
							"roof_doodads6.png"
							"roof_doodads7.png"
							"roof_doodads8.png"
						]
						Size = [2, 2]
						AnimationInterval = 0.1
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_windows_66.png"
						Size = [2, 2]
					}
				]
			}
		}

		ReactorHum
		{
			Type = ContinuousEffects
			Location = [1, 1]
			MediaEffects
			[
				: /BASE_SOUNDS/AudioInterior
				{
					Sound = "operating.wav"
					Volume = .5
					Speed = .5
					MaxConcurrent = 1
					DynamicVolume : ^/0/DynamicVolume
					{
						ExteriorVolume = .5
					}
				}
			]
		}

		BatterySprites
		{
			Type = AmmoSprites
			Location = [1, 1]
			AmmoStorage = BatteryStorage
			Layer = "doodads_high"
			HasZeroAmmoSprite = true
			AmmoLevels
			[
				{
					File = "reactor0.png"
					Size = [2, 2]
				}
				{
					File = "reactor1.png"
					Size = [2, 2]
				}
				{
					File = "reactor2.png"
					Size = [2, 2]
				}
				{
					File = "reactor3.png"
					Size = [2, 2]
				}
				{
					File = "reactor4.png"
					Size = [2, 2]
				}
				{
					File = "reactor5.png"
					Size = [2, 2]
				}
				{
					File = "reactor6.png"
					Size = [2, 2]
				}
				{
					File = "reactor7.png"
					Size = [2, 2]
				}
				{
					File = "reactor8.png"
					Size = [2, 2]
				}
			]
		}

		DestroyedEffects
		{
			Type = DeathEffects
			Location = [1, 1]

			MediaEffects
			[
				&<particles/reactor_explode.txt>
				&<particles/reactor_explode_flash.txt>
				&<particles/reactor_shockwave.txt>
				&<./Data/common_effects/particles/explosions/med_part_explode_debris.txt>
				&<./Data/common_effects/particles/explosions/big_part_explode_smoke.txt>

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "destroyed.wav"
					Volume = 1
					SpeedVariation = .25
				}

				: /BASE_SHAKE
				{
					ShakeAmount = .25
					Duration = 2
				}
			]
			
			HitEffects
			[
				{
					Type = PartAreaDamage
					DamageVsOperationalPerTile = 4000
					RadiusVsOperational = 6
					DamageVsStructurePerTile = 2000
					RadiusVsStructure = 4
					Delay = .05
					AllowFriendlyDamage = true
				}
				{
					Type = AreaFires
					FireChancePerTile = .5
					FireRadius = 6
					FireFalloff = 0
					Delay = .05
					AllowFriendlyFires = true
				}
				{
					Type = AreaImpulse
					ImpulsePerTile = 10
					ImpulseRadius = 10
					Delay = .05
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 1]
			Layer = "indicators"
			Indicators
			[
				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1.5, 1.5]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 2]
		}

		PowerUIStats
		{
			Type = UIStats
			Stat = Power
			Provided = 8
		}
	}
}
